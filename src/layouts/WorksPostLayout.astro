---
const { slug } = Astro.props;

// 全作品リストを取得
const allWorkFiles = import.meta.glob('/src/content/works/*.md', { eager: true });
const works = Object.entries(allWorkFiles).map(([filepath, mod]) => {
  const moduleAny = mod as any;
  const slug = filepath.split('/').pop()?.replace('.md', '') || '';
  return {
    slug,
    frontmatter: moduleAny.frontmatter || {},
    Content: moduleAny.default,
  };
});
// 日付昇順でソート
const sortedWorks = works.sort((a, b) => {
  const dateA = new Date(a.frontmatter.date || '1900-01-01');
  const dateB = new Date(b.frontmatter.date || '1900-01-01');
  return dateA.getTime() - dateB.getTime();
});
const currentIndex = sortedWorks.findIndex(w => w.slug === slug);
const prevWork = currentIndex > 0 ? sortedWorks[currentIndex - 1] : null;
const nextWork = currentIndex < sortedWorks.length - 1 ? sortedWorks[currentIndex + 1] : null;

// 現在記事のデータ取得
const currentWork = sortedWorks[currentIndex];
const frontmatter = currentWork.frontmatter;
const WorkContent = currentWork.Content;
---
<div id="container">
    <article>
        <h1 class="works-title">{frontmatter.title}</h1>
        <div class="works-header">
            <p class="works-date">Written on {frontmatter.date}</p>
            {frontmatter.tags && frontmatter.tags.length > 0 && (
                <div class="tags-container">
                    {frontmatter.tags.map((tag: string) => (
                        <span class="tag">#{tag}</span>
                    ))}
                </div>
            )}
        </div>
        <div class="content">
            <WorkContent />
        </div>
    </article>
    <div class="post-footer">
        <div class="post-nav">
            <div class="post-nav-left">
                <a href="/works/" class="back-link">&lt; 一覧に戻る</a>
            </div>
            <div class="post-nav-links-row">
                {prevWork ? (
                  <a href={`/works/${prevWork.slug}`} class="prev-link">&lt; {prevWork.frontmatter.date}</a>
                ) : (
                  <span class="nav-placeholder"></span>
                )}
                {nextWork ? (
                  <a href={`/works/${nextWork.slug}`} class="next-link">{nextWork.frontmatter.date} &gt;</a>
                ) : (
                  <span class="nav-placeholder"></span>
                )}
            </div>
        </div>
    </div>
</div>
<style>
    #container {
        margin: 40px 100px;
        align-items: center;
    }
    .works-title {
        font-size: 2.6em;
        font-weight: bold;
        margin-bottom: 0.2em;
        letter-spacing: 0.04em;
    }
    .works-date {
        color: #444;
        margin-bottom: 0.5em;
        line-height: 2em;
    }
    .works-header {
        display: flex;
        margin-bottom: 1.5em;
    }
    .tags-container {
        margin-top: 0.25em;
        margin-left: 1em;
    }
    .tag {
        display: inline-block;
        background: #dee;
        color: #444;
        padding: 0.2rem 0.5rem;
        margin: 0.1rem;
        border-radius: 0.3rem;
        font-size: 0.8rem;
    }
    .post-nav {
        flex-direction: column;
        margin-top: 2em;
        gap: 0.5em;
    }
    .post-footer {
        margin-top: 2rem;
        padding-top: 1rem;
        border-top: 1px solid #333;
    }
    .post-nav {
        flex-direction: column;
        margin-top: 2em;
        gap: 0.5em;
    }
    .post-nav-left {
        display: flex;
        flex-direction: row;
        align-items: flex-start;
    }
    .post-nav-links-row {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        width: 100%;
        margin-top: 0.2em;
        gap: 1em;
    }
    .back-link, .prev-link, .next-link {
        color: #333;
        text-decoration: none;
        margin: 0.2em 0;
        transition: color 0.2s;
    }
    .back-link:hover, .prev-link:hover, .next-link:hover {
        text-decoration: underline;
    }
    .nav-placeholder {
        flex: 1 1 0;
        height: 1.5em;
    }
    .thumbnail {
        min-width: 80%;
        max-width: 100%;
        max-height: 65vh;
        margin: auto;
        display: block;
        object-fit: cover;
        border-radius: 4px 4px 0 0;
        margin-bottom: 0;
    }
    .content img {
        max-width: 100% !important;
        max-height: 80vh !important;
        height: auto !important;
        width: auto !important;
        display: block !important;
        margin: 1rem auto !important;
    }
    .content h1, .content h2, .content h3, .content h4, .content h5, .content h6 {
        margin-top: 2rem;
        margin-bottom: 1rem;
    }
    .content p {
        line-height: 1.6;
        margin-bottom: 1rem;
    }
</style> 

<style is:global>
    /* 記事コンテンツ内の画像・動画とMarkdown要素のみに適用 */
    .content img,
    .content video {
        max-width: 100% !important;
        max-height: 80vh !important;
        height: auto !important;
        width: auto !important;
        display: block !important;
        margin: 1rem auto !important;
    }
    
    .content h1, .content h2, .content h3, .content h4, .content h5, .content h6 {
        margin-top: 2rem;
        margin-bottom: 1rem;
    }
    
    .content p {
        line-height: 1.6;
        margin-bottom: 1rem;
    }
</style>