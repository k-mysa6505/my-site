---
// 静的ページとして明示的に設定
export const prerender = true;

// =====================
// インポート
// =====================
import PageTitle from './PageTitle.astro';
import Pagination from './Pagination.astro';
import CardList from './CardList.astro';
import { getContentList } from '../utils/contentUtils';

// =====================
// 定数・データ取得
// =====================
const POSTS_PER_PAGE = 5; // 1ページあたりの記事数

// 現在のページを取得（URLパラメータから）
const currentPage = Astro.url.searchParams.get('page') ? parseInt(Astro.url.searchParams.get('page')!) : 1;

// マークダウンファイルを正しく読み込む
const allPosts = await getContentList('blog');

// デバッグ用：読み込んだファイルの構造を確認
console.log("=== Debug Info ===");
console.log("allPosts:", allPosts);

const sortedPosts = allPosts.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());

// ページネーション計算
const totalPosts = sortedPosts.length;
const totalPages = Math.ceil(totalPosts / POSTS_PER_PAGE);
const startIndex = (currentPage - 1) * POSTS_PER_PAGE;
const endIndex = startIndex + POSTS_PER_PAGE;
const currentPosts = sortedPosts.slice(startIndex, endIndex);

// 型定義
/**
 * @typedef {Object} Post
 * @property {string} slug
 * @property {string} filepath
 * @property {Object} frontmatter
 * @property {string} frontmatter.title
 * @property {string} frontmatter.date
 * @property {Function} Content
 */
/** @type {Array<Post>} */
const typedPosts = currentPosts;

// =====================
// ページ構成
// =====================
---
<PageTitle title="Blog" description="日常をブログ形式でまとめてます．文章力11級の日記をご覧ください．" />
<CardList items={currentPosts} type="blog" />
<Pagination currentPage={currentPage} totalPages={totalPages} basePath="/blog/" />
